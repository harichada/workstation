#*******************************************************************************
#* 
#* Tracing Levels:
#*   To control messages logged using the ArchTracer or Tracer methods, you
#*   specify one of the following message levels.
#* 
#*   OFF,ERROR,WARN,INFO,DEBUG - TRACE_SCOPE,TRACE_HIGH,TRACE_MEDIUM,TRACE_LOW 
#* 
#*   You use the same pattern as used in the log4j.properties file for
#*   OFF-DEBUG but use the TraceLevel format as shown below when specifying
#*   the TRACE_* levels.
#*
#* Examples:
#*   1. TRACE_LOW - all of the above levels will write to the appender.
#*   2. TRACE_SCOPE - TRACE_SCOPE, DEBUG, INFO, WARN and ERROR.
#*   3. INFO - INFO, WARN and ERROR. 
#*   4. OFF - Turn off all trace messages. 
#*
#*   One thing to note is that DEBUG and TRACE_SCOPE are equivalent trace levels. 
#*   The difference between the two is you must specify
#*   gov.ca.dcss.arch.common.trace.TraceLevel for TRACE_SCOPE.
#*
#* The gov.ca.dcss.arch.common.trace.TraceLevel Format:
#*   If you are going to specify one of our custom TRACE_* values, the TraceLevel
#*   translates our custom level to a log4j level which is an integer value. 
#*
#*   This example enables TRACE_SCOPE but disables all other TRACE_* levels:
#*     log4j.logger.gov.ca.dcss.arch.batch.job.EJBContainerTransactionServiceImpl=TRACE_SCOPE#gov.ca.dcss.arch.common.trace.TraceLevel
#*
#* The log4j Format:
#*   If you are going to use one of the base values from log4j (DEBUG,INFO,WARN or ERROR), 
#*   do not add the "#gov.ca.dcss.arch.common.trace.TraceLevel" qualifier at the
#*   end of the definition.
#*
#*   This example turns off all TRACE_* messages:
#*     log4j.logger.gov.ca.dcss.arch.batch.job.EJBContainerTransactionServiceImpl=INFO 
#*
#* Optimizing trace messages during development:
#*
#*   This examples turns off gov* which pretty much turns everything in the CSE app off.
#*   By adding a specific trace level to the specific area I am interested in,
#*   you can limit trace messages to the area of interest.
#*
#*     log4j.rootLogger=TRACE_HIGH#gov.ca.dcss.arch.common.trace.TraceLevel,console
#*     log4j.logger.gov=OFF
#*     log4j.logger.gov.ca.dcss.cse.financial=TRACE_LOW#gov.ca.dcss.arch.common.trace.TraceLevel
#*
#* tracing.properties vs log4j.properties
#*   The values specified in the tracing.properties file ONLY apply to method
#*   invocations on the ArchTracer and Tracer classes. To control method invocations
#*   using the log4j Logger class, use the log4j.properties file.
#*    
#* Example tracing.properties Tracer invocation: 
#*    
#*   private void test( ) 
#*   {
#*      Tracer.medium("This is a medium message."); 
#*   } 
#*    
#* Example log4j.properties Logger invocation:
#*   Example using the log4j Logger class: 
#*    
#*   private void test( ) 
#*   {
#*      LOGGER.warn("This is a warning"); 
#*   } 
#*
#*   private static final Logger LOGGER = Logger.getLogger( BatchBootstrap.class );
#*
#* Common Problems:
#*   Problem: No TRACE_* messages are being written to the log
#*   Solution: Make sure that the log4j.rootLogger is enabled appropriately as shown.
#*             Note that you can specify any of the TRACE_* or log4j trace levels
#*             as a default. The value at the end MUST be present as it routes all
#*             trace messages to the console appender by default.
#*
#*   Example:
#*     log4j.rootLogger=TRACE_LOW#gov.ca.dcss.arch.common.trace.TraceLevel,console
#* 
#*******************************************************************************

#*******************************************************************************
#* enable.scope - Set the property to true to enable scope message logging. 
#*                Even with scope enabled you can still override scope for 
#*                specific packages and/or classes by adding an entry. See 
#*                the log4j.logger.gov.ca.dcss.arch specified below.
#* 
#* enable.scope.indenting - true to indent scope messages
#* 
#* enable.scope.results - true to enable exit scope result message logging
#* 
#* mdb.tracing.enabled - true to enable MDB tracing.
#*******************************************************************************
enable.scope=false
enable.scope.indenting=false
enable.scope.results=false
mdb.tracing.enabled=true

#*******************************************************************************
#* Overrides:
#*   Overrides the value specified for the log4j.rootLogger, for all
#*   classes which match the specified pattern. The following overrides are 
#*   provided to limit the amount of trace information generated by the
#*   architecture. You can place your tracing overrides here as well.
#*******************************************************************************
log4j.logger.gov.ca.dcss.arch=WARN
log4j.logger.gov.ca.dcss.cse.validation.ValidationFilter=WARN
log4j.logger.org.grnds.structural.icstruts=WARN

#*******************************************************************************
#* set rootLogger to either TRACE_LOW, TRACE_MEDIUM, TRACE_HIGH, TRACE_SCOPE for filtering
#* set rootLogger appender to console or file for output preference.
#*
#* Examples:
#*   log4j.rootLogger=TRACE_LOW#gov.ca.dcss.arch.common.trace.TraceLevel,console
#*   log4j.rootLogger=INFO,console
#*******************************************************************************
log4j.rootLogger=OFF
#log4j.rootLogger=TRACE_HIGH#gov.ca.dcss.arch.common.trace.TraceLevel,console

#*******************************************************************************
#* This defines how the messages will be formatted when written to the console.
#* Do not change these values!
#*******************************************************************************
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-12p %c: %m%n

#*******************************************************************************
#* If you would like to send all tracing messages to a file, update the root logger
#* to "log4j.rootLogger=TRACE_HIGH#gov.ca.dcss.arch.common.trace.TraceLevel,file" and
#* replace the /logs/trace.log below to an appropriate location.
#*******************************************************************************
log4j.appender.file=org.apache.log4j.FileAppender
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{ISO8601} %-12p %c: %m%n
log4j.appender.file.File=C:/logs/trace.log

#*******************************************************************************
#* set property to comma-delimited list of MDB "TracingName" values to enable trace
#* of each MDB (if mdb.tracing.enabled); "TracingName" is set in ejb-jar.xml.
#*
#* For example, here are all the MDBs in the CSE system by project:
#* (ArchServices) general-purpose AsyncActivity MDBs:
#*    mdb.tracing.beans=AsynchronousCallHandlerMDB,AsynchronousCallHandlerFormMDB
#* (ArchServicesReporting) Reporting-related MDBs:
#*    ReportRequestRoutingMessageHandler,ReportRequestFastMessageHandler,ReportRequestSlowMessageHandler,ReportRequestDWFastMessageHandler,ReportRequestDWSlowMessageHandler,ReportRequestBalRegenMessageHandler
#* (BusinessUtilitiesServices) MDBs:
#*    EmailHandler,CentralScanStoreImageMessageHandler
#* (Case (CDM) Services) MDBs:
#*    FCRCaseRecordMessageHandler,FCRParticipantRecordMessageHandler,UpdateAddressEmployerSynchronizeMesssageHandler,LocateResponseMessageHandler,FCRConsortiaResponseMessageHandler,CSENetLocateRequestMessageHandler,ConsortiaUpdateEventMessageHandler,UpdateAddressEmployerSynchronizeMesssageHandler,PublicAssistanceMessageHandler
#* (ArchIntegrationServices) Routing MDBs:
#*    ARSCASESInbound,SDUInbound,DCSSInbound,CPLSInbound,CSeNetInbound,EDDInbound,FCRInbound,CDXConsortiaUpdate,LOCFCRLocateRequest,CDXConsortiaUpdate2,DMVInbound,FTBInbound
#* (ArchBPMServices) Architecture BPM MDBs:
#*    BPMEventConsumerHandler
#*******************************************************************************
mdb.tracing.beans=AsynchronousCallHandlerMDB,AsynchronousCallHandlerFormMDB,ReportRequestRoutingMessageHandler,ReportRequestFastMessageHandler,ReportRequestSlowMessageHandler,ReportRequestDWFastMessageHandler,ReportRequestDWSlowMessageHandler,ReportRequestBalRegenMessageHandler,FCRCaseRecordMessageHandler,FCRParticipantRecordMessageHandler,UpdateAddressEmployerSynchronizeMesssageHandler,LocateResponseMessageHandler,FCRConsortiaResponseMessageHandler,CSENetLocateRequestMessageHandler,ConsortiaUpdateEventMessageHandler,UpdateAddressEmployerSynchronizeMesssageHandler,PublicAssistanceMessageHandler,ARSCASESInbound,SDUInbound,DCSSInbound,CPLSInbound,CSeNetInbound,EDDInbound,FCRInbound,CDXConsortiaUpdate,LOCFCRLocateRequest,CDXConsortiaUpdate2,DMVInbound,FTBInbound,EmailHandler,CentralScanStoreImageMessageHandler
